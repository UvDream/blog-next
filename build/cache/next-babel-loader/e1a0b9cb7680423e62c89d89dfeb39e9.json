{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from \"axios\";\nimport config from \"./config.js\"; // 倒入默认配置\n\nexport default function request(options) {\n  console.log(options);\n  return new _Promise(function (reslove, reject) {\n    var service = axios.create({\n      baseURL: config.baseURL,\n      timeout: config.timeout,\n      headers: config.headers,\n      withCredentials: config.withCredentials\n    }); // request拦截器\n\n    service.interceptors.request.use(function (config) {\n      return config;\n    }, function (error) {\n      return _Promise.reject(error);\n    }); // response拦截器\n\n    service.interceptors.response.use(function (response) {\n      var data; // IE9\n\n      if (response.data == undefined) {\n        data = response.request.responseText;\n      } else {\n        data = response.data;\n      }\n\n      switch (data.code) {\n        case \"110\":\n          break;\n\n        default:\n      }\n\n      return data;\n    }, function (err) {\n      if (err.response && err.response.status) {\n        switch (err.response.status) {\n          case 400:\n            err.message = \"请求错误\";\n            break;\n\n          case 401:\n            err.message = \"未授权，请登录\";\n            break;\n\n          case 403:\n            err.message = \"拒绝访问\";\n            break;\n\n          case 404:\n            err.message = \"\\u8BF7\\u6C42\\u5730\\u5740\\u51FA\\u9519: \".concat(err.response.config.url);\n            break;\n\n          case 408:\n            err.message = \"请求超时\";\n            break;\n\n          case 500:\n            err.message = \"服务器内部错误\";\n            break;\n\n          case 501:\n            err.message = \"服务未实现\";\n            break;\n\n          case 502:\n            err.message = \"网关错误\";\n            break;\n\n          case 503:\n            err.message = \"服务不可用\";\n            break;\n\n          case 504:\n            err.message = \"网关超时\";\n            break;\n\n          case 505:\n            err.message = \"HTTP版本不受支持\";\n            break;\n\n          default:\n        }\n      }\n\n      return _Promise.reject(err); //返回错误信息\n    });\n    service(options).then(function (res) {\n      reslove(res);\n      return res;\n    })[\"catch\"](function (error) {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["D:/UvDream/Github/blog-react/next-blog/api/request.js"],"names":["axios","config","request","options","console","log","reslove","reject","service","create","baseURL","timeout","headers","withCredentials","interceptors","use","error","response","data","undefined","responseText","code","err","status","message","url","then","res"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport config from \"./config.js\"; // 倒入默认配置\r\nexport default function request(options) {\r\n  console.log(options)\r\n  return new Promise((reslove, reject) => {\r\n    var service = axios.create({\r\n      baseURL: config.baseURL,\r\n      timeout: config.timeout,\r\n      headers: config.headers,\r\n      withCredentials: config.withCredentials\r\n    });\r\n    // request拦截器\r\n    service.interceptors.request.use(\r\n      config => {\r\n        return config;\r\n      },\r\n      error => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    // response拦截器\r\n    service.interceptors.response.use(\r\n      response => {\r\n        let data;\r\n        // IE9\r\n        if (response.data == undefined) {\r\n          data = response.request.responseText;\r\n        } else {\r\n          data = response.data;\r\n        }\r\n        switch (data.code) {\r\n          case \"110\":\r\n            break;\r\n          default:\r\n        }\r\n        return data;\r\n      },\r\n      err => {\r\n        if (err.response && err.response.status) {\r\n          switch (err.response.status) {\r\n            case 400:\r\n              err.message = \"请求错误\";\r\n              break;\r\n            case 401:\r\n              err.message = \"未授权，请登录\";\r\n              break;\r\n            case 403:\r\n              err.message = \"拒绝访问\";\r\n              break;\r\n            case 404:\r\n              err.message = `请求地址出错: ${err.response.config.url}`;\r\n              break;\r\n            case 408:\r\n              err.message = \"请求超时\";\r\n              break;\r\n            case 500:\r\n              err.message = \"服务器内部错误\";\r\n\r\n              break;\r\n            case 501:\r\n              err.message = \"服务未实现\";\r\n              break;\r\n            case 502:\r\n              err.message = \"网关错误\";\r\n              break;\r\n            case 503:\r\n              err.message = \"服务不可用\";\r\n              break;\r\n            case 504:\r\n              err.message = \"网关超时\";\r\n              break;\r\n            case 505:\r\n              err.message = \"HTTP版本不受支持\";\r\n              break;\r\n            default:\r\n          }\r\n        }\r\n        return Promise.reject(err); //返回错误信息\r\n      }\r\n    );\r\n    service(options)\r\n      .then(res => {\r\n        reslove(res);\r\n        return res;\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}